Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o (exit)
/usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
                              usb_serial.o (__tablejump2__)
/usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                              usb_serial.o (__do_copy_data)
/usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                              usb_serial.o (__do_clear_bss)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .text          0x0000000000000000        0x0 example.o
 .data          0x0000000000000000        0x0 example.o
 .bss           0x0000000000000000        0x0 example.o
 .text          0x0000000000000000        0x0 usb_serial.o
 .text.usb_serial_available
                0x0000000000000000       0x34 usb_serial.o
 .text.usb_serial_putchar_nowait
                0x0000000000000000       0x3e usb_serial.o
 .text.usb_serial_write
                0x0000000000000000      0x332 usb_serial.o
 .text.usb_serial_flush_output
                0x0000000000000000       0x20 usb_serial.o
 .text.usb_serial_get_baud
                0x0000000000000000       0x12 usb_serial.o
 .text.usb_serial_get_stopbits
                0x0000000000000000        0x6 usb_serial.o
 .text.usb_serial_get_paritytype
                0x0000000000000000        0x6 usb_serial.o
 .text.usb_serial_get_numbits
                0x0000000000000000        0x6 usb_serial.o
 .text.usb_serial_set_control
                0x0000000000000000       0x56 usb_serial.o
 .avr.prop      0x0000000000000000       0x16 usb_serial.o
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000000000        0xc /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .debug_line    0x0000000000000000       0x79 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .debug_info    0x0000000000000000       0x9b /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .debug_abbrev  0x0000000000000000       0x14 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .debug_aranges
                0x0000000000000000       0x20 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
LOAD example.o
LOAD usb_serial.o
LOAD /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libatmega32u4.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x972
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x00000000000000ac      0x17e example.o
 .progmem.data  0x000000000000022a       0xc9 usb_serial.o
                0x00000000000002f4                . = ALIGN (0x2)
 *fill*         0x00000000000002f3        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000002f4                __ctors_start = .
 *(.ctors)
                0x00000000000002f4                __ctors_end = .
                0x00000000000002f4                __dtors_start = .
 *(.dtors)
                0x00000000000002f4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000002f4        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000000002f4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000002f4        0xc /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000300       0x16 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000300                __do_copy_data
 .init4         0x0000000000000316       0x10 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000316                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000326        0x4 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init9)
 *(.text)
 .text          0x000000000000032a        0x2 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x000000000000032a                __vector_42
                0x000000000000032a                __vector_22
                0x000000000000032a                __vector_28
                0x000000000000032a                __vector_1
                0x000000000000032a                __vector_32
                0x000000000000032a                __vector_34
                0x000000000000032a                __vector_24
                0x000000000000032a                __vector_12
                0x000000000000032a                __bad_interrupt
                0x000000000000032a                __vector_6
                0x000000000000032a                __vector_31
                0x000000000000032a                __vector_35
                0x000000000000032a                __vector_39
                0x000000000000032a                __vector_3
                0x000000000000032a                __vector_23
                0x000000000000032a                __vector_30
                0x000000000000032a                __vector_25
                0x000000000000032a                __vector_13
                0x000000000000032a                __vector_17
                0x000000000000032a                __vector_19
                0x000000000000032a                __vector_7
                0x000000000000032a                __vector_41
                0x000000000000032a                __vector_27
                0x000000000000032a                __vector_5
                0x000000000000032a                __vector_33
                0x000000000000032a                __vector_37
                0x000000000000032a                __vector_4
                0x000000000000032a                __vector_9
                0x000000000000032a                __vector_2
                0x000000000000032a                __vector_21
                0x000000000000032a                __vector_15
                0x000000000000032a                __vector_36
                0x000000000000032a                __vector_29
                0x000000000000032a                __vector_40
                0x000000000000032a                __vector_8
                0x000000000000032a                __vector_26
                0x000000000000032a                __vector_14
                0x000000000000032a                __vector_16
                0x000000000000032a                __vector_18
                0x000000000000032a                __vector_20
                0x000000000000032a                __vector_38
                0x000000000000032c                . = ALIGN (0x2)
 *(.text.*)
 .text.send_str
                0x000000000000032c       0x1a example.o
                0x000000000000032c                send_str
 .text.recv_str
                0x0000000000000346       0x6a example.o
                0x0000000000000346                recv_str
 .text.parse_and_execute_command
                0x00000000000003b0      0x110 example.o
                0x00000000000003b0                parse_and_execute_command
 .text.startup.main
                0x00000000000004c0       0x6e example.o
                0x00000000000004c0                main
 .text.usb_wait_in_ready
                0x000000000000052e        0xa usb_serial.o
 .text.usb_init
                0x0000000000000538       0x32 usb_serial.o
                0x0000000000000538                usb_init
 .text.usb_configured
                0x000000000000056a        0x6 usb_serial.o
                0x000000000000056a                usb_configured
 .text.usb_serial_getchar
                0x0000000000000570       0x46 usb_serial.o
                0x0000000000000570                usb_serial_getchar
 .text.usb_serial_flush_input
                0x00000000000005b6       0x26 usb_serial.o
                0x00000000000005b6                usb_serial_flush_input
 .text.usb_serial_putchar
                0x00000000000005dc       0x80 usb_serial.o
                0x00000000000005dc                usb_serial_putchar
 .text.usb_serial_get_control
                0x000000000000065c        0x6 usb_serial.o
                0x000000000000065c                usb_serial_get_control
 .text.__vector_10
                0x0000000000000662       0x74 usb_serial.o
                0x0000000000000662                __vector_10
 .text.__vector_11
                0x00000000000006d6      0x298 usb_serial.o
                0x00000000000006d6                __vector_11
                0x000000000000096e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000096e        0x0 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                0x000000000000096e                exit
                0x000000000000096e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000096e        0x4 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000972                _etext = .

.data           0x0000000000800100        0x8 load address 0x0000000000000972
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x7 usb_serial.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800108                . = ALIGN (0x2)
 *fill*         0x0000000000800107        0x1 
                0x0000000000800108                _edata = .
                0x0000000000800108                PROVIDE (__data_end, .)

.bss            0x0000000000800108        0x4
                0x0000000000800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800108        0x4 usb_serial.o
 *(.bss*)
 *(COMMON)
                0x000000000080010c                PROVIDE (__bss_end, .)
                0x0000000000000972                __data_load_start = LOADADDR (.data)
                0x000000000000097a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010c        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080010c                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 example.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 usb_serial.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x140
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x38 example.o
 .debug_aranges
                0x0000000000000038       0xa8 usb_serial.o
 .debug_aranges
                0x00000000000000e0       0x20 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000100       0x20 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x0000000000000120       0x20 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1b04
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x9f4 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_info    0x00000000000009f4      0x64b example.o
 .debug_info    0x000000000000103f      0x8f4 usb_serial.o
 .debug_info    0x0000000000001933       0x9b /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .debug_info    0x00000000000019ce       0x9b /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x0000000000001a69       0x9b /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0xd67
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x96a /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_abbrev  0x000000000000096a      0x1b5 example.o
 .debug_abbrev  0x0000000000000b1f      0x20c usb_serial.o
 .debug_abbrev  0x0000000000000d2b       0x14 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000d3f       0x14 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x0000000000000d53       0x14 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000      0xecc
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_line    0x000000000000001d      0x2cd example.o
 .debug_line    0x00000000000002ea      0xa65 usb_serial.o
 .debug_line    0x0000000000000d4f       0x61 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .debug_line    0x0000000000000db0       0x97 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x0000000000000e47       0x85 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x0000000000000000      0x268
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xa4 example.o
 .debug_frame   0x00000000000000a4      0x1c4 usb_serial.o

.debug_str      0x0000000000000000      0x866
 *(.debug_str)
 .debug_str     0x0000000000000000      0x371 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_str     0x0000000000000371      0x226 example.o
                                        0x26c (size before relaxing)
 .debug_str     0x0000000000000597      0x2cf usb_serial.o
                                        0x4ce (size before relaxing)

.debug_loc      0x0000000000000000      0xfb5
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x484 example.o
 .debug_loc     0x0000000000000484      0xb31 usb_serial.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0xf0
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x28 example.o
 .debug_ranges  0x0000000000000028       0xc8 usb_serial.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(example.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__bss_end                                         /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                                                  usb_serial.o
__do_copy_data                                    /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                                                  usb_serial.o
__heap_end                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__init                                            /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__stack                                           /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__tablejump2__                                    /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
                                                  usb_serial.o
__vector_1                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_10                                       usb_serial.o
                                                  /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_11                                       usb_serial.o
                                                  /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_12                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_13                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_14                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_15                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_16                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_17                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_18                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_19                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_2                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_20                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_21                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_22                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_23                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_24                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_25                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_26                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_27                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_28                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_29                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_3                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_30                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_31                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_32                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_33                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_34                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_35                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_36                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_37                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_38                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_39                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_4                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_40                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_41                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_42                                       /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_5                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_6                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_7                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_8                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_9                                        /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_default                                  /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vectors                                         /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
_exit                                             /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
exit                                              /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                                                  /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
main                                              example.o
                                                  /usr/local/Cellar/avr-gcc/7.2.0/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
parse_and_execute_command                         example.o
recv_str                                          example.o
send_str                                          example.o
usb_configured                                    usb_serial.o
                                                  example.o
usb_init                                          usb_serial.o
                                                  example.o
usb_serial_available                              usb_serial.o
usb_serial_flush_input                            usb_serial.o
                                                  example.o
usb_serial_flush_output                           usb_serial.o
usb_serial_get_baud                               usb_serial.o
usb_serial_get_control                            usb_serial.o
                                                  example.o
usb_serial_get_numbits                            usb_serial.o
usb_serial_get_paritytype                         usb_serial.o
usb_serial_get_stopbits                           usb_serial.o
usb_serial_getchar                                usb_serial.o
                                                  example.o
usb_serial_putchar                                usb_serial.o
                                                  example.o
usb_serial_putchar_nowait                         usb_serial.o
usb_serial_set_control                            usb_serial.o
usb_serial_write                                  usb_serial.o
